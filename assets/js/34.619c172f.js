(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{446:function(t,o,r){"use strict";r.r(o);var a=r(0),v=Object(a.a)({},(function(){var t=this,o=t._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"git常用指令汇总"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#git常用指令汇总"}},[t._v("#")]),t._v(" Git常用指令汇总")]),t._v(" "),o("h2",{attrs:{id:"git是什么"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#git是什么"}},[t._v("#")]),t._v(" Git是什么")]),t._v(" "),o("p",[o("font",{attrs:{color:"orange"}},[t._v("分布式版本控制系统")])],1),t._v(" "),o("p",[t._v("原理图：")]),t._v(" "),o("p",[o("img",{attrs:{src:"http://cdn.qiniu.liyansheng.top/typora/image-20231115144225416.png",alt:"image-20231115144225416"}})]),t._v(" "),o("h2",{attrs:{id:"svn与git区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#svn与git区别"}},[t._v("#")]),t._v(" SVN与Git区别")]),t._v(" "),o("ul",[o("li",[o("p",[t._v("SVN："),o("font",{attrs:{color:"cornflowerblue"}},[t._v("集中式")]),t._v("版本控制系统，版本库集中在服务器，需要"),o("font",{attrs:{color:"cornflowerblue"}},[t._v("联网")]),t._v("，在工作需要的时候先从中央服务器获取最新版本，做完操作在推送到中央服务器。")],1),t._v(" "),o("p",[t._v("示意图：")]),t._v(" "),o("p",[o("img",{attrs:{src:"http://cdn.qiniu.liyansheng.top/typora/image-20231115144243440.png",alt:"image-20231115144243440"}})])]),t._v(" "),o("li",[o("p",[t._v("Git："),o("font",{attrs:{color:"cornflowerblue"}},[t._v("分布式")]),t._v("版本控制系统，没有中央服务器，"),o("font",{attrs:{color:"cornflowerblue"}},[t._v("每个人电脑都是完整的版本库")]),t._v("。在工作时将各自的修改"),o("font",{attrs:{color:"cornflowerblue"}},[t._v("推送")]),t._v("给对方，就能互相看到对方的修改。")],1)])]),t._v(" "),o("h2",{attrs:{id:"版本库创建"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#版本库创建"}},[t._v("#")]),t._v(" 版本库创建")]),t._v(" "),o("p",[t._v("将当前目录变成版本库，使用指令"),o("font",{attrs:{color:"orange"}},[t._v(" git init ")]),t._v("后，可以看到当前目录生成一个.git文件夹，这说明当前目录的所有文件将被git管理起来")],1),t._v(" "),o("h2",{attrs:{id:"常用指令"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#常用指令"}},[t._v("#")]),t._v(" 常用指令")]),t._v(" "),o("ul",[o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git config --list")]),t._v(" 查看全部配置信息")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git config  [配置信息名]")]),t._v("：显示具体配置信息，如我要查看是user.name，直接输入命令git config user.name即可")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git help [指令名]：")]),t._v("获取该命令的用法相关帮助")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git status")]),t._v("：查看当天版本库的状态，可以看到当前版本库变化情况，即版本库内的每个文件的修改，删除都能跟踪到")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git add [文件]")]),t._v("：将指定文件添加暂存区")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git commit -m [提交说明]")]),t._v("：将暂存区的文件提交到本地仓库")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git diff [文件]")]),t._v("：查看文件哪些地方修改了")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git log")]),t._v("：查看提交的历史记录日志")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git reset --hard HEAD^：")]),t._v('版本回退，符号"^"表示回到上一个版本，回到上上个版本，用命令HEAD^^,依次类推，回退几个版本就看“^"符号的数量，如果数量多，可以用简写HEAD~n代替，例如回退前50版本，则git reset --hard HEAD~50。'),o("font",{attrs:{color:"cornflowerblue"}},[t._v("注意:")]),t._v("版本回退后，原先的修改就没有了")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git reflog")]),t._v("：查看版本号")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git reset --hard [版本号]：")]),t._v("回退到指定【版本号】的版本")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git chackout -- [文件名]")]),t._v("：丢弃文件工作区的修改")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git restore [文件]")]),t._v("：丢弃文件在工作区的修改")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git remote add origin [远程仓库地址]")]),t._v("：添加一个远程仓库地址")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git push -u origin  master")]),t._v("：将本地仓库分支master推送到源仓库去")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git clone  [远程仓库地址]：")]),t._v("克隆一个本地库")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git branch")]),t._v("：查看当前的分支")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git checkout -b [分支名]")]),t._v("：创建一个分支并切换到该分支")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git checkout [分支名]：")]),t._v("切换分支")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git branch [分支名]：")]),t._v("创建分支")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git merge [分支名]：")]),t._v("将分支和并到当前分支上")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git branch -d [分支名]")]),t._v("：删除分支")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git remote -v：")]),t._v("查看远程库的信息")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git checkout -b [分支] origin/[分支]：")]),t._v("创建远程origin的dev分支到本地来")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git pull：")]),t._v("把最新的提交抓取下来")],1)]),t._v(" "),o("li",[o("p",[o("font",{attrs:{color:"orange"}},[t._v("git fetch [远程仓库名]")]),t._v("：抓取最新的数据")],1)])]),t._v(" "),o("hr"),t._v(" "),o("p",[t._v("未完待续，详细可以参考官方文档呢")])])}),[],!1,null,null,null);o.default=v.exports}}]);