(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{526:function(e,t,a){"use strict";a.r(t);var s=a(1),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"wsl-环境下-docker-的安装、使用与问题解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wsl-环境下-docker-的安装、使用与问题解决"}},[e._v("#")]),e._v(" WSL 环境下 Docker 的安装、使用与问题解决")]),e._v(" "),t("h2",{attrs:{id:"一般步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一般步骤"}},[e._v("#")]),e._v(" 一般步骤")]),e._v(" "),t("h4",{attrs:{id:"_1-安装-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装-docker"}},[e._v("#")]),e._v(" "),t("strong",[e._v("1. 安装 Docker")])]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("推荐方案")]),e._v("：使用 "),t("strong",[e._v("Docker Desktop + WSL 2 后端")]),e._v("（官方推荐，自动集成） 安装 Docker Desktop 时勾选 "),t("strong",[e._v('"Use WSL 2 based engine"')]),e._v("。 在 WSL 中直接运行 "),t("code",[e._v("docker")]),e._v("命令，无需额外配置。")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("备用方案")]),e._v("：在 WSL 内手动安装 Docker 引擎（仅限 WSL 2）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo apt update && sudo apt install -y docker.io\nsudo service docker start\n")])])])])]),e._v(" "),t("h4",{attrs:{id:"_2-验证-wsl-和-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-验证-wsl-和-docker"}},[e._v("#")]),e._v(" "),t("strong",[e._v("2. 验证 WSL 和 Docker")])]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("检查 WSL 状态")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("wsl -l -v              # 查看已安装的发行版及版本\nwsl --status           # 检查 WSL 运行状态\n")])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("验证 Docker")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker --version       # 检查版本\ndocker run hello-world # 运行测试容器\n")])])])])]),e._v(" "),t("h4",{attrs:{id:"_3-进入容器的正确方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-进入容器的正确方式"}},[e._v("#")]),e._v(" "),t("strong",[e._v("3. 进入容器的正确方式")])]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("推荐命令")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker exec -it 容器名 /bin/sh   # 精简镜像（如 Alpine）\ndocker exec -it 容器名 /bin/bash # 完整镜像（如 Ubuntu）\n")])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("常见问题")]),e._v("： 如果报错 "),t("code",[e._v("bash: not found")]),e._v("，说明容器使用 "),t("code",[e._v("sh")]),e._v("，改用 "),t("code",[e._v("/bin/sh")]),e._v("。 极简镜像可能无 Shell，需通过 "),t("code",[e._v("docker cp")]),e._v("或自定义 Dockerfile 解决。")])])]),e._v(" "),t("h4",{attrs:{id:"_4-文件传输到容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-文件传输到容器"}},[e._v("#")]),e._v(" "),t("strong",[e._v("4. 文件传输到容器")])]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("方法 1：挂载目录（实时同步）")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run -v /mnt/c/Windows/path:/app 镜像名\n")])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("方法 2："),t("code",[e._v("docker cp")]),e._v("复制文件")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker cp ./file.txt 容器名:/path/\n")])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("方法 3：通过 Dockerfile 构建镜像")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("COPY file.txt /app/\n")])])])])]),e._v(" "),t("h4",{attrs:{id:"_5-常见错误解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-常见错误解决"}},[e._v("#")]),e._v(" "),t("strong",[e._v("5. 常见错误解决")])]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("Docker 安装失败")]),e._v("：")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("手动启用 Windows 功能（WSL 2、Hyper-V）：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart\ndism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart\n")])])])]),e._v(" "),t("li",[t("p",[e._v("彻底清理后重装（删除残留的 "),t("code",[e._v("%APPDATA%\\Docker")]),e._v("等目录）。")])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("文件未找到")]),e._v("： 使用 "),t("code",[e._v("ls -la")]),e._v("代替 "),t("code",[e._v("ll")]),e._v("（精简镜像无此别名）。 全盘搜索文件："),t("code",[e._v('find / -name "filename"')]),e._v("。")])])]),e._v(" "),t("h4",{attrs:{id:"_6-关键命令速查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-关键命令速查"}},[e._v("#")]),e._v(" "),t("strong",[e._v("6. 关键命令速查")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("功能")]),e._v(" "),t("th",[e._v("命令示例")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("进入容器")]),e._v(" "),t("td",[t("code",[e._v("docker exec -it 容器名 /bin/sh")])])]),e._v(" "),t("tr",[t("td",[e._v("复制文件到容器")]),e._v(" "),t("td",[t("code",[e._v("docker cp ./file 容器名:/path/")])])]),e._v(" "),t("tr",[t("td",[e._v("挂载目录到容器")]),e._v(" "),t("td",[t("code",[e._v("docker run -v /host/path:/container/path 镜像名")])])]),e._v(" "),t("tr",[t("td",[e._v("查看容器信息")]),e._v(" "),t("td",[t("code",[e._v("docker inspect 容器名 \\| grep WorkingDir")])])]),e._v(" "),t("tr",[t("td",[e._v("安装缺失工具")]),e._v(" "),t("td",[t("code",[e._v("apk add bash")]),e._v("（Alpine）或 "),t("code",[e._v("apt install bash")]),e._v("（Debian）")])])])]),e._v(" "),t("hr"),e._v(" "),t("h3",{attrs:{id:"最终建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最终建议"}},[e._v("#")]),e._v(" "),t("strong",[e._v("最终建议")])]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("开发环境")]),e._v("：优先用 "),t("strong",[e._v("Docker Desktop + WSL 2")]),e._v("，享受无缝集成。")]),e._v(" "),t("li",[t("strong",[e._v("生产环境")]),e._v("：通过 Dockerfile 构建镜像，避免依赖本地文件。")]),e._v(" "),t("li",[t("strong",[e._v("调试技巧")]),e._v("： 精简镜像用 "),t("code",[e._v("/bin/sh")]),e._v("，完整镜像用 "),t("code",[e._v("/bin/bash")]),e._v("。 文件传输失败时，优先检查路径和权限。")])]),e._v(" "),t("h2",{attrs:{id:"附录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[e._v("#")]),e._v(" 附录")]),e._v(" "),t("p",[e._v("由于"),t("code",[e._v("Docker Desktop + WSL 2 后端")]),e._v("的方式"),t("span",{staticStyle:{color:"red"}},[e._v("安装失败")]),e._v("，多方面缘故，故才用"),t("code",[e._v("在 WSL 内手动安装 Docker 引擎（仅限 WSL 2）")]),e._v("的方式安装，具体如下：")]),e._v(" "),t("h3",{attrs:{id:"步骤-1-清理旧安装-如果有"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤-1-清理旧安装-如果有"}},[e._v("#")]),e._v(" "),t("strong",[e._v("步骤 1：清理旧安装（如果有）")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 卸载旧版本 Docker（如果存在）\nsudo apt remove -y docker docker-engine docker.io containerd runc\nsudo rm -rf /var/lib/docker\n")])])]),t("h3",{attrs:{id:"步骤-2-添加-docker-官方-gpg-密钥和软件源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤-2-添加-docker-官方-gpg-密钥和软件源"}},[e._v("#")]),e._v(" "),t("strong",[e._v("步骤 2：添加 Docker 官方 GPG 密钥和软件源")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# 安装依赖工具\nsudo apt update\nsudo apt install -y ca-certificates curl gnupg lsb-release\n\n# 添加 Docker 官方 GPG 密钥\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n\n# 添加 Docker 官方软件源\necho "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n\n# 更新软件包索引\nsudo apt update\n')])])]),t("h3",{attrs:{id:"步骤-3-安装-docker-引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤-3-安装-docker-引擎"}},[e._v("#")]),e._v(" "),t("strong",[e._v("步骤 3：安装 Docker 引擎")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 安装 Docker CE\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin\n\n# 验证安装\ndocker --version\n")])])]),t("h3",{attrs:{id:"步骤-4-启动-docker-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤-4-启动-docker-服务"}},[e._v("#")]),e._v(" "),t("strong",[e._v("步骤 4：启动 Docker 服务")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 启动 Docker 服务\nsudo service docker start\n\n# 设置开机自启（WSL 需要额外配置，见下文）\nsudo systemctl enable docker\n")])])]),t("h3",{attrs:{id:"步骤-5-测试-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤-5-测试-docker"}},[e._v("#")]),e._v(" "),t("strong",[e._v("步骤 5：测试 Docker")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 运行测试容器\nsudo docker run hello-world\n")])])]),t("h2",{attrs:{id:"常见问题解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见问题解决"}},[e._v("#")]),e._v(" "),t("strong",[e._v("常见问题解决")])]),e._v(" "),t("h3",{attrs:{id:"问题-1-lsb-release-cs返回错误版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题-1-lsb-release-cs返回错误版本"}},[e._v("#")]),e._v(" "),t("strong",[e._v("问题 1："),t("code",[e._v("lsb_release -cs")]),e._v("返回错误版本")])]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("$(lsb_release -cs)")]),e._v("返回的 Ubuntu 版本不被 Docker 支持（如 "),t("code",[e._v("jammy")]),e._v("但 Docker 还未适配），可以手动指定一个已知兼容版本：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# 例如强制使用 focal（Ubuntu 20.04）的仓库\necho "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu focal stable" | sudo tee /etc/apt/sources.list.d/docker.list\n')])])]),t("h3",{attrs:{id:"问题-2-gpg-密钥错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题-2-gpg-密钥错误"}},[e._v("#")]),e._v(" "),t("strong",[e._v("问题 2：GPG 密钥错误")])]),e._v(" "),t("p",[e._v("如果遇到 "),t("code",[e._v("NO_PUBKEY")]),e._v("错误，重新导入密钥：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo rm /etc/apt/keyrings/docker.gpg\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo apt update\n")])])]),t("h3",{attrs:{id:"问题-3-wsl-2-中-docker-无法自启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题-3-wsl-2-中-docker-无法自启动"}},[e._v("#")]),e._v(" "),t("strong",[e._v("问题 3：WSL 2 中 Docker 无法自启动")])]),e._v(" "),t("p",[e._v("由于 WSL 2 不支持 "),t("code",[e._v("systemd")]),e._v("，需手动配置启动：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 编辑 ~/.bashrc\nnano ~/.bashrc\n\n# 在文件末尾添加：\nif ! service docker status >/dev/null 2>&1; then\n    sudo service docker start >/dev/null 2>&1\nfi\n\n# 保存后生效\nsource ~/.bashrc\n")])])]),t("hr"),e._v(" "),t("h2",{attrs:{id:"验证安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#验证安装"}},[e._v("#")]),e._v(" "),t("strong",[e._v("验证安装")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 检查 Docker 版本\ndocker --version\n\n# 检查服务状态\nsudo service docker status\n\n# 运行测试容器\ndocker run --rm hello-world\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);