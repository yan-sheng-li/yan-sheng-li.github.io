(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{522:function(a,s,t){"use strict";t.r(s);var r=t(0),e=Object(r.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"数据库设计三大范式-白话版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计三大范式-白话版"}},[a._v("#")]),a._v(" 数据库设计三大范式-白话版")]),a._v(" "),s("h2",{attrs:{id:"第一范式-1nf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一范式-1nf"}},[a._v("#")]),a._v(" 第一范式（1NF）")]),a._v(" "),s("blockquote",[s("p",[a._v("确保每个字段都是不可再分的原子值")])]),a._v(" "),s("p",[a._v("想象一下你的数据库表格，每一个格子（字段）里只能有一个值，不能有一组值或一个列表。比如，你有一个表格记录学生的联系方式，联系方式这一栏里只能有一个电话号码，不能写多个电话号码。")]),a._v(" "),s("p",[a._v("例子：")]),a._v(" "),s("p",[a._v("不符合1NF：")]),a._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 学生ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 姓名   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 电话号码        "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-------|------|----------------|")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 张三   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("123456")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("789012")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n")])])]),s("p",[a._v("符合1NF：")]),a._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 学生ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 姓名   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 电话号码   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-------|------|--------|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 张三   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("123456")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 张三   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("789012")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n")])])]),s("h2",{attrs:{id:"第二范式-2nf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二范式-2nf"}},[a._v("#")]),a._v(" 第二范式（2NF）")]),a._v(" "),s("blockquote",[s("p",[a._v("消除部分依赖")])]),a._v(" "),s("p",[a._v("第二范式在第一范式的基础上，确保每个非主键字段完全依赖于主键。也就是说，不能有字段只依赖于主键的一部分，而必须依赖于整个主键。")]),a._v(" "),s("p",[a._v("例子：\n如果我们有一个学生选课的表格，主键是由“学生ID”和“课程ID”共同组成的，那么每个非主键字段（比如成绩）必须依赖于这两个字段的组合，而不能只依赖于其中一个。")]),a._v(" "),s("p",[a._v("不符合2NF：")]),a._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 学生ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 课程ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 学生姓名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 课程名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 成绩 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-------|--------|--------|------|-----|")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("101")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 张三    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 数学  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("90")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n")])])]),s("p",[a._v("这里的“学生姓名”和“课程名”只依赖于“学生ID”和“课程ID”的一部分，不是组合依赖。")]),a._v(" "),s("p",[a._v("符合2NF：\n将表分解为两个表：")]),a._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[a._v("    学生表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 学生ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 学生姓名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-------|--------|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 张三    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n\n    课程表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 课程ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 课程名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-------|------|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("101")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 数学  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n\n    成绩表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 学生ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 课程ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 成绩 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-------|--------|-----|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("101")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("90")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n")])])]),s("h2",{attrs:{id:"第三范式-3nf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三范式-3nf"}},[a._v("#")]),a._v(" 第三范式（3NF）")]),a._v(" "),s("blockquote",[s("p",[a._v("消除传递依赖")])]),a._v(" "),s("p",[a._v("第三范式在第二范式的基础上，确保每个非主键字段只依赖于主键，而不依赖于其他非主键字段。就是说，非主键字段之间不能有依赖关系。")]),a._v(" "),s("p",[a._v("例子：\n如果我们有一个表格记录学生信息，包含学号、姓名、系别、系主任，那么系主任信息应该直接依赖于系别，而不是学号。")]),a._v(" "),s("p",[a._v("不符合3NF：")]),a._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 学号   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 姓名   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 系别   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 系主任  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-------|------|------|-------|")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 张三   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 计算机 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 王教授  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n")])])]),s("p",[a._v("这里的“系主任”依赖于“系别”，而“系别”又依赖于“学号”。")]),a._v(" "),s("p",[a._v("符合3NF：\n将表分解为两个表：")]),a._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[a._v("    学生表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 学号   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 姓名   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 系别   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-------|------|------|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 张三   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 计算机 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n\n    系别表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 系别   "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 系主任  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("------|-------|")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 计算机 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" 王教授  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n")])])]),s("p",[a._v("通过应用这些范式，可以使数据库设计更加合理，减少数据冗余，提高数据一致性和可维护性。")])])}),[],!1,null,null,null);s.default=e.exports}}]);